<?xml version="1.0" encoding="UTF-8"?>
<!-- 这是用来测试 XML 模版或标签生成的 SQL语句或参数的 Fenix XML 文件. -->
<fenixs namespace="fenix">

    <!-- 用于单元测试 equal 标签生成的 JPQL 语句和参数. -->
    <fenix id="equal">
        SELECT u FROM @{entityName}
        WHERE
        <equal field="u.id" value="user.id"/>
        <andEqual field="u.name" value="user.name" match="user.name != empty"/>
        <orEqual field="u.email" value="email" match=""/>
        <!-- 使用 '?' 号，即使不存在这个属性，解析时也不会报错. -->
        <orEqual field="u.abc" value="user.def" match="?abc != empty"/>
    </fenix>

    <!-- 用于单元测试 notEqual 标签生成的 JPQL 语句和参数. -->
    <fenix id="notEqual">
        SELECT u FROM @{entityName}
        WHERE
        <notEqual field="u.id" value="user.id"/>
        <andNotEqual field="u.name" value="user.name" match="user.name != empty"/>
        <orNotEqual field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 greaterThan 标签生成的 JPQL 语句和参数. -->
    <fenix id="greaterThan">
        SELECT u FROM @{entityName}
        WHERE
        <greaterThan field="u.id" value="user.id"/>
        <andGreaterThan field="u.name" value="user.name" match="user.name != empty"/>
        <orGreaterThan field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 lessThan 标签生成的 JPQL 语句和参数. -->
    <fenix id="lessThan">
        SELECT u FROM @{entityName}
        WHERE
        <lessThan field="u.id" value="user.id"/>
        <andLessThan field="u.name" value="user.name" match="user.name != empty"/>
        <orLessThan field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 greaterThanEqual 标签生成的 JPQL 语句和参数. -->
    <fenix id="greaterThanEqual">
        SELECT u FROM @{entityName}
        WHERE
        <greaterThanEqual field="u.id" value="user.id"/>
        <andGreaterThanEqual field="u.name" value="user.name" match="user.name != empty"/>
        <orGreaterThanEqual field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 greaterThanEqual 标签生成的 JPQL 语句和参数. -->
    <fenix id="lessThanEqual">
        SELECT u FROM @{entityName}
        WHERE
        <lessThanEqual field="u.id" value="user.id"/>
        <andLessThanEqual field="u.name" value="user.name" match="user.name != empty"/>
        <orLessThanEqual field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 like 标签生成的 JPQL 语句和参数. -->
    <fenix id="like">
        SELECT u FROM @{entityName}
        WHERE
        <like field="u.id" value="user.id"/>
        <andLike field="u.name" value="user.name" match="user.name != empty"/>
        <orLike field="u.email" pattern="%@163.com" match=""/>
    </fenix>

    <!-- 用于单元测试 notLike 标签生成的 JPQL 语句和参数. -->
    <fenix id="notLike">
        SELECT u FROM @{entityName}
        WHERE
        <notLike field="u.id" value="user.id"/>
        <andNotLike field="u.name" value="user.name" match="user.name != empty"/>
        <orNotLike field="u.email" pattern="%@163.com" match=""/>
    </fenix>

    <!-- 用于单元测试 startsWith 标签生成的 JPQL 语句和参数. -->
    <fenix id="startsWith">
        SELECT u FROM @{entityName}
        WHERE
        <startsWith field="u.id" value="user.id"/>
        <andStartsWith field="u.name" value="user.name" match="user.name != empty"/>
        <orStartsWith field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 notStartsWith 标签生成的 JPQL 语句和参数. -->
    <fenix id="notStartsWith">
        SELECT u FROM @{entityName}
        WHERE
        <notStartsWith field="u.id" value="user.id"/>
        <andNotStartsWith field="u.name" value="user.name" match="user.name != empty"/>
        <orNotStartsWith field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 endsWith 标签生成的 JPQL 语句和参数. -->
    <fenix id="endsWith">
        SELECT u FROM @{entityName}
        WHERE
        <endsWith field="u.id" value="user.id"/>
        <andEndsWith field="u.name" value="user.name" match="user.name != empty"/>
        <orEndsWith field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 notEndsWith 标签生成的 JPQL 语句和参数. -->
    <fenix id="notEndsWith">
        SELECT u FROM @{entityName}
        WHERE
        <notEndsWith field="u.id" value="user.id"/>
        <andNotEndsWith field="u.name" value="user.name" match="user.name != empty"/>
        <orNotEndsWith field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 between 标签生成的 JPQL 语句和参数，并一起测试 between 退化成大于等于或者小于等于的情况. -->
    <fenix id="between">
        SELECT u FROM @{entityName}
        WHERE
        <between field="u.id" start="startId" end="endId" match="(?startId != empty) || (?endId != empty)"/>
        <andBetween field="u.age" start="startAge" end="endAge" match="(?startAge != empty) || (?endAge != empty)"/>
        <orBetween field="u.birthday" start="startBirthday" end="endBirthday" match="(?startBirthday != null) || (endBirthday != null)"/>
    </fenix>

    <!-- 用于单元测试 in 标签生成的 JPQL 语句和参数. -->
    <fenix id="in">
        SELECT u FROM @{entityName}
        WHERE
        <in field="u.id" value="user.id"/>
        <andIn field="u.name" value="names" match="names != empty"/>
        <orIn field="u.email" value="emails" match=""/>
    </fenix>

    <!-- 用于单元测试 notIn 标签生成的 JPQL 语句和参数. -->
    <fenix id="notIn">
        SELECT u FROM @{entityName}
        WHERE
        <notIn field="u.id" value="user.id"/>
        <andNotIn field="u.name" value="names" match="names != empty"/>
        <orNotIn field="u.email" value="emails" match=""/>
    </fenix>

    <!-- 用于单元测试 isNull 标签生成的 JPQL 语句和参数. -->
    <fenix id="isNull">
        SELECT u FROM @{entityName}
        WHERE
        <isNull field="u.id"/>
        <andIsNull field="u.name" match="user.name != empty"/>
        <orIsNull field="u.email" match=""/>
    </fenix>

    <!-- 用于单元测试 isNotNull 标签生成的 JPQL 语句和参数. -->
    <fenix id="isNotNull">
        SELECT u FROM @{entityName}
        WHERE
        <isNotNull field="u.id"/>
        <andIsNotNull field="u.name" match="user.name != empty"/>
        <orIsNotNull field="u.email" match=""/>
    </fenix>

    <!-- 用于单元测试 text 标签生成的 JPQL 语句和参数. -->
    <fenix id="text">
        SELECT u FROM @{entityName}
        WHERE
        <text value="['userId': user.id]">
            u.id = :userId
        </text>
        <!-- 含义是：当用户名和邮箱都不为空（对 '&&' 符号做了转义）时，才生成下面的 JPQL 语句，value 中是 Map 型参数. -->
        <text value="['userName': user.name, 'email': '%163.com']" match="user.name != empty &amp;&amp; email != empty">
            AND u.name = :userName AND u.email LIKE :email
        </text>
    </fenix>

    <!-- 用于测试 import 标签导入而设计的 XML 节点. -->
    <fenix id="commonFields">
        u.id, u.name, u.email
    </fenix>

    <!-- 用于测试 import 标签导入而设计的 XML 节点. -->
    <fenix id="commonConditions">
        <isNotNull field="u.id" value="user.id"/>
        <andIn field="u.name" value="names" match="names != empty"/>
        <orEndsWith field="u.email" value="email" match=""/>
    </fenix>

    <!-- 用于单元测试 import 标签生成的 JPQL 语句和参数. -->
    <fenix id="import">
        SELECT
        <import fenixId="commonFields"/>
        FROM @{entityName}
        WHERE
        <import fenixId="commonConditions" match="user.name != empty &amp;&amp; email != empty"/>
    </fenix>

    <!-- 用于单元测试 choose 标签生成的 JPQL 语句和参数. -->
    <fenix id="choose">
        UPDATE t_user SET u.c_sex =
        <choose when="user.sex == '0'" then="'female'"
                when2="user.sex == '1'" then2="'male'"
                else="unknown" />
        , u.c_status =
        <choose when="?state != empty" then="'yes'" else="'no'" />
        , u.c_age =
        <choose when="age > 60" then="'老年'"
                when2="age > 35" then2="'中年'"
                when3="age > 20" then3="'青年'"
                when4="age > 10" then4="'少年'"
                else="'幼年'" />
        WHERE u.c_id = '@{user.id}'
    </fenix>

    <!-- 用于单元测试 set 标签生成的 JPQL 语句和参数. -->
    <fenix id="set">
        UPDATE User
        <set field="name" value="user.name" match="user.name != empty"
             field2="email" value2="email"
             field3="age" value3="user.age" match3="?abc != empty"
             field4="sex" value4="2" match4="" />
        WHERE u.c_id = '@{user.id}'
    </fenix>

    <!-- 用于单元测试自定义的 hello 标签生成的 SQL 片段和参数. -->
    <fenix id="helloTagger">
        <hello value="World"/>
        <andHello value="Blinkfox"/>
        <orHello value="Fenix"/>
    </fenix>

    <!-- 用于单元测试自定义的 hi 标签生成的 SQL 片段和参数. -->
    <fenix id="hiTagger">
        <hi value="LiLei"/>
        <andHi value="HanMeiMei"/>
    </fenix>

    <!-- 用于单元测试 where 标签生成的 JPQL 语句和参数. -->
    <fenix id="testWhere">
        SELECT u FROM @{entityName}
        <where />
        <andEqual field="u.id" value="user.id" match="user.id != empty"/>
        <andLike field="u.name" value="user.name" match="user.name != empty"/>
    </fenix>

    <!-- 用于单元测试 where 标签生成的 JPQL 语句和参数. -->
    <fenix id="testWhere2">
        SELECT u FROM @{entityName}
        <where />
        <andEqual field="u.email" value="user.email" match="user.email != empty"/>
        <andLike field="u.birthday" value="user.birthday" match="user.birthday != empty"/>
    </fenix>

    <!-- 用于单元测试 where 标签生成的 JPQL 语句和参数. -->
    <fenix id="testWhere3">
        SELECT u FROM @{entityName}
        <where />
        anD u.id = #{user.id}
        <andEqual field="u.email" value="user.email" match="user.email != empty"/>
        <andLike field="u.name" value="user.name" match="user.name != empty"/>
        ORDER BY
            u.updateTime DESC
    </fenix>

    <!-- 用于单元测试 where 标签是否能正常消除掉 and. -->
    <fenix id="testWhere4">
        SELECT u FROM @{entityName}
        <where />
        @if{?user.name != empty}
        AND u.name LIKE '%@{user.name}%'
        @end{}
        <andEqual field="u.email" value="email" match="email != empty"/>
    </fenix>

    <!-- 用于单元测试 where 标签是否能正常消除掉 and. -->
    <fenix id="testWhere5">
        SELECT u FROM @{entityName}
        <where />
        AND
        ORDER BY u.updateTime DESC
    </fenix>

    <!-- 用于单元测试 where 标签是否能正常消除掉 and. -->
    <fenix id="testWhere6">
        SELECT u FROM @{entityName}
        <where />
        @if{?user.name == 'Lisi'}
        AND u.name LIKE '%@{user.name}%'
        @end{}
        <andEqual field="u.email" value="email" match="email == 'aa'"/>
    </fenix>

    <!-- 用于单元测试 where 标签是否能正常消除掉 and. -->
    <fenix id="testWhere7">
        SELECT u FROM @{entityName}
        <where />
        @if{?user.name == 'Lisi'}
        AND u.name LIKE '%@{user.name}%'
        @end{}
        @if{?user.status == 'null'}
        AND u.status = @{user.status}
        @end{}
    </fenix>

    <!-- 用于单元测试 trimWhere 标签是否正常. -->
    <fenix id="testTrimWhere">
        SELECT * FROM
        (
            SELECT
                t.name as name FROM @{entityName} t
            <trimWhere>
                <andEqual field="u.email" value="user.email" match="user.email != empty"/>
            </trimWhere>
        ) a
    </fenix>

    <!-- 用于单元测试 trimWhere 标签是否正常. -->
    <fenix id="testTrimWhere2">
        SELECT * FROM
        (
        SELECT
        t.name as name FROM @{entityName} t
        <trimWhere>
            <andLike field="u.name" value="user.name" match="user.name != empty"/>
            <andEqual field="u.email" value="user.email" match="user.email != empty"/>
        </trimWhere>
        ) a
    </fenix>

    <!-- 用于单元测试 trimWhere 标签是否正常. -->
    <fenix id="testTrimWhere3">
        SELECT u FROM @{entityName}
        <trimWhere>
            anD u.id = #{user.id}
            <andEqual field="u.email" value="user.email" match="user.email != empty"/>
            <andLike field="u.name" value="user.name" match="user.name != empty"/>
        </trimWhere>
        ORDER BY
        u.updateTime DESC
    </fenix>

    <!-- 用于单元测试 trimWhere 标签是否正常. -->
    <fenix id="testTrimWhere4">
        SELECT u FROM @{entityName}
        <trimWhere>
            @if{?user.email != empty}
            AND u.email LIKE '%@{user.email}%'
            @end{}
            <andEqual field="u.email" value="user.email" match="user.email != empty"/>
        </trimWhere>
    </fenix>

    <!-- 用于单元测试 trimWhere 标签是否正常. -->
    <fenix id="testTrimWhere5">
        SELECT u FROM @{entityName}
        <trimWhere>
            @if{?user.name != empty}
            AND u.name LIKE '%@{user.name}%'
            @end{}
            <andEqual field="u.email" value="user.email" match="user.email != empty"/>
            <andEqual field="u.email" value="email" match="email != empty"/>
        </trimWhere>
    </fenix>

    <!-- 用于单元测试 trimWhere 标签是否正常. -->
    <fenix id="testTrimWhere6">
        SELECT u FROM @{entityName}
        <trimWhere>
            @if{?user.name == 'Lisi'}
            AND u.name LIKE '%@{user.name}%'
            @end{}
            @if{?user.status == 'null'}
            AND u.status = @{user.status}
            @end{}
        </trimWhere>
    </fenix>

    <!-- 用于单元测试 trimWhere 标签是否正常. -->
    <fenix id="testTrimWhere7">
        SELECT u FROM @{entityName}
        <trimWhere>
            1 = 1
            @if{?user.name == 'Lisi'}
            AND u.name LIKE '%@{user.name}%'
            @end{}
            @if{?user.status == 'null'}
            AND u.status = @{user.status}
            @end{}
        </trimWhere>
    </fenix>

</fenixs>
