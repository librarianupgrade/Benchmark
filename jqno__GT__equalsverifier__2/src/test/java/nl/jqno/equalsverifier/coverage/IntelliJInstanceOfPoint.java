/*
 * Copyright 2013 Jan Ouwens
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package nl.jqno.equalsverifier.coverage;

import nl.jqno.equalsverifier.testhelpers.types.Color;

/**
 * equals and hashCode generated by IntelliJ IDEA 12.
 *
 * Settings:
 * - Accept subclasses as parameter to equals() method: true
 */
// CHECKSTYLE: ignore NeedBraces for 35 lines.
// CHECKSTYLE: ignore NoWhitespaceAfter for 35 lines.
public final class IntelliJInstanceOfPoint {
	private final int x;
	private final int y;
	private final Color color;

	public IntelliJInstanceOfPoint(int x, int y, Color color) {
		this.x = x;
		this.y = y;
		this.color = color;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (!(o instanceof IntelliJInstanceOfPoint))
			return false;

		IntelliJInstanceOfPoint point = (IntelliJInstanceOfPoint) o;

		if (x != point.x)
			return false;
		if (y != point.y)
			return false;
		if (color != point.color)
			return false;

		return true;
	}

	@Override
	public int hashCode() {
		int result = x;
		result = 31 * result + y;
		result = 31 * result + (color != null ? color.hashCode() : 0);
		return result;
	}
}
